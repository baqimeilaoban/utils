package main

import (
	"encoding/json"
	"fmt"
)

type AutoGenerated struct {
	Age   int    `json:"age"`
	Name  string `json:"name"`
	Child []int  `json:"child"`
}

func main() {
	//testJsonMarshal()
	testMapKeyUnique()
}

/*
输出结果：
[1 2 3]
[3 4 5]
原因：数组指针是同一个，但是容量和长度是不变的
*/
func testJsonMarshal() {
	jsonStr1 := `{"age": 14,"name": "potter", "child":[1,2,3]}`
	a := AutoGenerated{}
	json.Unmarshal([]byte(jsonStr1), &a)
	aa := a.Child
	fmt.Println(aa)
	jsonStr2 := `{"age": 12,"name": "potter", "child":[3,4,5,7,8,9]}`
	json.Unmarshal([]byte(jsonStr2), &a)
	fmt.Println(aa)
}

/*
输出结果：
ant

map[a:ant b:bee]
原因：map的key具有唯一性，若是key不存在，直接打印零值
*/
func testMapKeyUnique() {
	pairs := [][2]string{
		{"a", "apple"},
		{"a", "ant"},
		{"b", "bee"},
	}

	m := map[string]string{
		pairs[0][0]: pairs[0][1],
		pairs[1][0]: pairs[1][1],
		pairs[2][0]: pairs[2][1],
	}
	fmt.Println(m["a"])
	fmt.Println(m["c"])
	fmt.Println(m)
}
